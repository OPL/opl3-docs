Title: CLI commands
SeeAlso:
 - conventions.cli

---

Open Power Autoloader tools are available through the Symfony 2 command-line interface. See the [[conventions.cli]] chapter to read more about it.

Configuration files
===================

In order to use the CLI tools, a complete autoloader definition must be saved in an XML file. The definition contains the list of all the namespaces and namespace separators we want to use, as well as various file locations, where the autoloaders can find or export different data. The detailed structure of the configuration file is described [here][autoloader.toolset.configuration].

The path to the configuration file must be provided directly after the command name.

Available commands
==================

Currently, two commands are available to the programmers.

opl:autoloader:build-class-map
------------------------------

The command builds a list of classes, interfaces and (as of PHP 5.4) traits that appear in the specified filesystem locations. The list is called a *class map* and is necessary for the `ClassMapLoader`, `ApcLoader` and `ChdbLoader` to work.

~~~~
[console]
./cli opl:autoloader:build-class-map ../config.xml --type=serialized
~~~~

The class map will be saved as a text file containing a serialized PHP array. This format is suitable for `ClassMapLoader` and `ApcLoader`.

~~~~
[console]
./cli opl:autoloader:build-class-map ../config.xml --type=chdb
~~~~

The class map will be saved as a memory-mapped file for the chdb extension. Once loaded, the file resides in the RAM till the modification. This format is suitable for `ChdbLoader`.

> [information]
> In order to use the `chdb` export type, you must have the [chdb](http://pecl.php.net/package/chdb) extension installed. It is not available for Windows systems.

<!-- ... -->

> [warning]
> The chdb memory map files are not portable between different operating systems and architectures.

The following file types must be defined in the configuration file:

* `serialized-class-map` - the path to the serialized class map file.
* `chdb-class-map` - the path to the chdb class map file.

opl:autoloader:core-dump-export
-------------------------------

Exports the [application core][autoloader.core-tracker] to a single PHP file that loads it explicitely. The following combinations of options are supported:

~~~~
[console]
./cli opl:autoloader:core-dump-export ../config.xml --export-type=require
~~~~

Produces a list of `require` statements that load the core.

~~~~
[console]
./cli opl:autoloader:core-dump-export ../config.xml --export-type=concat
~~~~

Concatenates the sources of the PHP files containing the core into a single PHP file. The operation is safe for both namespaced and non-namespaced code which can be mixed within a single file.

~~~~
[console]
./cli opl:autoloader:core-dump-export ../config.xml --export-type=concat --strip-comments
~~~~

The result is similar to the ordinary `--export-type=concat` option, but also strips the file header comments from the concatenated files.

The following file types must be defined in the configuration file:

* `core-dump` - the path to the core dump generated by the `Opl\Autoloader\CoreTracker`.
* `core-export` - the path to the location, where the commands save the resulting PHP file.

The path to the core dump can be also provided by the optional `--core=PATH` option.

Adding the commands to the CLI
==============================

Open Power Libs does not provide its own command-line interface. Instead, it provides some commands that can be used to build one. The details concerning installing the commands in the CLI application are described in the [Command-line interface][conventions.cli] chapter. The example below shows, how to install the OPA commands in the Symfony CLI:

~~~~
[php]
$cli->addCommands(array(
	new \Opl\Autoloader\Command\ClassMapBuild(),
	new \Opl\Autoloader\Command\CoreDump(),
));
~~~~